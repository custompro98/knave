---
import MainLayout from "../layouts/main-layout.astro";
import Knave from "../components/knave.astro";
import Card from "../components/card.astro";
import ActionCard from "../components/action-card.astro";

enum Tab {
  KNAVES = "knaves",
  MONSTERS = "monsters",
}
---

<MainLayout title="Knave">
  <div class="max-w-screen-xl p-4" x-data="{ activeTab: 'knaves' }">
    <div class="grid grid-cols-6 lg:grid-cols-9">
      <h2
        class="w-fit cursor-pointer p-2 font-heading text-3xl tracking-tight"
        :class=`activeTab === '${Tab.KNAVES}' ? 'underline' : ''`
      >
        <span x-on:click=`activeTab = '${Tab.KNAVES}'`>Knaves</span>
      </h2>
      <h2
        class="w-fit cursor-pointer p-2 font-heading text-3xl tracking-tight"
        :class=`activeTab === '${Tab.MONSTERS}' ? 'underline' : ''`
      >
        <span x-on:click=`activeTab = '${Tab.MONSTERS}'`>Monsters</span>
      </h2>
    </div>
    <template x-if=`activeTab === '${Tab.KNAVES}'`>
      <section x-data="{ knaves: knaves }">
        <div class="grid grid-cols-1 gap-2 md:grid-cols-2 lg:grid-cols-3">
          <ActionCard handler="knaves = [rollKnave(), ...knaves]" />
          <template x-for="knave in knaves">
            <Knave knave={"knave"} />
          </template>
        </div>
      </section>
    </template>
    <template x-if=`activeTab === '${Tab.MONSTERS}'`>
      <div>Monsters</div>
    </template>
  </div>
</MainLayout>
<script>
  import Alpine from "alpinejs";
  import { rollOnTable } from "knave-2e-generator";
  import {
    type Knave,
    rollKnave,
    upsertKnave,
    readKnaves,
    deleteKnave,
  } from "../scripts/knaves";

  declare global {
    interface Window {
      Alpine: typeof Alpine;

      knaves: Knave[];

      rollKnave: () => Knave;
      upsertKnave: (uuid: Knave) => void;
      deleteKnave: (uuid: string) => void;

      rollMonster: () => ReturnType<typeof rollOnTable>;
      rollMonsterTrait: () => ReturnType<typeof rollOnTable>;
      rollScent: () => ReturnType<typeof rollOnTable>;
      rollWeakness: () => ReturnType<typeof rollOnTable>;
    }
  }

  window.Alpine = Alpine;
  window.rollKnave = rollKnave;
  window.upsertKnave = upsertKnave;
  window.deleteKnave = deleteKnave;
  window.knaves = readKnaves();
</script>
